# config/scoring_config.yaml
# Configuration parameters for the relationship scoring calculations

# --- Source Weights ---
# Assigns numerical weights based on evidence hierarchy
source_weights:
  Guideline: 10.0
  Label: 9.0
  Phase 4 CT: 7.0
  Phase 3 CT: 6.0
  Phase 2 CT: 5.0
  Phase 1 CT: 4.0
  PubMed: 1.0
  Preclinical: 0.5
  Review: 1.5

# --- Evidence Strength Calculation ---
evidence_strength:
  # How to aggregate frequencies from multiple mentions of the same source type
  # Options: "Logarithmic" (applies log(1 + count)), "SimpleSum" (direct sum of weights)
  frequency_aggregation: "Logarithmic"

  # Method for normalizing raw weighted scores to mitigate entity prominence bias
  # Options: "PMI-like", "RelativeFrequency", "None"
  # Note: Implementation details for these methods are in src/scoring/evidence.py
  normalization_method: "PMI-like" # Example default

# --- Sentiment Score Calculation ---
sentiment:
  # Method for aggregating individual mention sentiments
  # Options: "NetScoreDetailed" (provides positive/negative/neutral/net breakdown),
  #          "DominantWeighted" (returns single category based on weighted majority)
  aggregation_method: "NetScoreDetailed"

  # Optional: Define thresholds if needed for determining 'dominant_sentiment' in NetScoreDetailed
  # net_score_threshold_positive: 0.1
  # net_score_threshold_negative: -0.1

# --- Trend Score Calculation ---
trend:
  # Method used to calculate the trend/momentum/velocity score
  # Options: "RecencyWeighted", "RateOfChange", "EvidenceProgression"
  # Note: Implementation details are in src/scoring/trend.py
  method: "RecencyWeighted"

  # Parameters specific to the chosen method
  recency_weighted:
    # Decay rate (lambda) for exponential decay: score = weight * exp(-lambda * age_in_years)
    # Higher value means older evidence decays faster.
    decay_rate: 0.15 # Example: ~50% reduction in weight after ~4.6 years

  rate_of_change:
    # Time window in years for comparing score changes (e.g., compare last 1 year vs previous 1 year)
    window_years: 1.0

  evidence_progression:
    # Define points awarded for reaching certain tiers recently (example)
    # recent_years_threshold: 2.0
    # progression_points:
    #   Guideline: 5.0
    #   Label: 4.0
    #   Phase 3 CT: 3.0
    # (Implementation would need logic to track historical max tier)
    pass # Placeholder for more complex config if needed

# --- Logging ---
logging:
  level: "INFO" # e.g., DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  log_file: null # Set to a file path (e.g., "logs/scorer.log") to log to a file, null for console only

